/*
属性选择器
    属性选择器可以根据元素特定属性来选择元素，这样就可以不用借助与类或者id选择器
    E[att]            选择具有att属性的E元素
    E[att="val"]      选择具有att属性且值等于val的E元素
    E[att^="val"]     选择具有att属性且值以val开头的E元素
    E[att$="val"]     选择具有att属性且值以val结尾的E元素
    E[att*="val"]     选择具有att属性且含有val的E元素

    有正则表达式的味道

结构伪类选择器
    结构伪类选择器主要根据文档结构来选择元素，常用于根据父级选择里面的子元素
    E:first-child     匹配父元素中的第一个子元素E
    E:last-child      匹配父元素中的最后一个子元素E
    E:nth-child(n)    匹配父元素中的第n个子元素E
    E:first-of-type   指定类型E的第一个
    E:last-of-type    指定类型E的最后一个
    E:nth-of-type(n)  指定类型E的第n个

    n可以是数字，关键字和公式
        关键字：even:偶数，odd：奇数
        公式
            n：表示从0开始计数，每次递增1，超出或者没有的元素会忽略，也就是选择了所有的孩子
            2n   :偶数
            2n+1 :奇数
            5n   :5的倍数
            n+5  :从第5个开始
            -n+5 :前5个

    区别
        E:nth-child(n):会把所有的孩子排列序号，执行的时候先看指定个孩子，然后看是否匹配E标签，只有匹配才能执行
        E:nth-of-type(n):会把指定元素E排列序号,然后找出指定孩子

        两个选择器执行顺序相反

    注意：E就是直接匹配的元素，不是匹配元素的父类,冒号之前不能有空格
        如果要指定父类，把E改成父类后面在增加一个空格即可
        也可以把父类写成后代选择器，就可以同时指定父类和选择的子类，更加清晰

伪元素选择器
    伪元素选择器可以帮助我们利用css创建新标签元素，而不需要HTML标签，从而简化HTML结构
    :: before 在元素内部的前面插入内容
    :: before 在元素内部的后面插入内容

    before和after创建一个元素，但是属于行内元素
    新创建的这个元素在文档树中是找不到的，所以我们称为伪元素
    语法：element::before{}
    before和after必须有content属性
    before在父元素内容的前面创建元素，after在父元素内容的后面插入元素
    伪元素选择和标签选择器一样，权重为1

    理解：before和after,content是必须具有的属性
         他们都是行内元素，所以不能设置大小，可以通过加浮动和定位转换成块元素

 注意：类选择器，属性选择器，伪类选择器，权重都为10
 */