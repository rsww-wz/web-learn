/*
为什么需要定位
    问题
        某个元素可以自由的在一个盒子内移动位置，并且压住其他盒子吗？
        滚动窗口的时候，让盒子是固定屏幕某个位置不动?

    浮动可以让多个块级盒子一行没有缝隙排列显示，经常用于横向排列盒子
    定位则是可以让盒子自由的在某个盒子内移动位置或者固定屏幕中某个位置，并且可以压住其他盒子

定位组成
    定位：将盒子定在某个位置，所以定位也是在摆盒子，按照定位的方式移动盒子
    定位=定位模式+边偏移
        定位模式用于指定一个元素的文档中的定位方式
        边偏移则决定了该元素的最终位置

定位模式
    定位模式决定元素的定位方式，它通过css position属性来设置，其值可以分为4个
        static     静态定位(标准流默认值，也就是无定位)
        relative   相对定位
        absolute   绝对定位
        fixed      固定定位

边偏移
    有4个属性，单位px
    top      顶端偏移量，定义元素相对于其父元素上边线的距离
    bottom   底端偏移量，定义元素相对于其父元素下边线的距离
    left     左侧偏移量，定义元素相对于其父元素上左线的距离
    right    右侧偏移量，定义元素相对于其父元素右边线的距离

相对定位
    相对定位是元素在移动位置的时候，是相对于它原来的位置来说的
    特点
        它是相对于自己原来的位置来移动的(移动位置的时候参照点是自己原来的位置)
        原来在标准流的位置继续占有，后面的盒子然后以标准流的方式对待他(继续保留原来的位置)

    典型应用：给绝对定位当爹

绝对定位
    绝对定位是元素在移动位置的时候，是相对于它祖先元素来说的
    特点
        如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位
        如果祖先元素有定位(相对，绝对，固定),则以最近一级的有定位祖先元素为参考点移动位置
        绝对定位不再占有原先的位置

子绝父相
    子绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其他兄弟盒子
    父盒子需要定位限制子盒子父盒子内显示

    总结：父盒子布局时，需要占有位置，因此父亲只能是相对定位,子盒子不需要占有位置，所以是绝对定位

固定定位
    固定定位时元素固定于浏览器可视区的位置
    主要使用场景：可以在浏览器页面滚动时元素的位置不会改变

    特点
        以浏览器的可视窗口为参照点移动元素
        跟父元素没有任何关系
        不随滚动条滚条
        固定定位不占有原先位置(又增加了一个图层，而且这个图层比浮动图层还高，是最的图层)
        固定定位可以看做是一种特殊的绝对定位

    技巧
        固定在版心右侧
        算法：
            让固定定位的盒子left50%，走到浏览器可视区的一半位置
            让固定定位的盒子margin-left版心宽度一半距离，在多走版心宽度的一半位置就可以让固定定位的盒子贴着版心右侧对齐了

粘性定位
    可以被认为是相对定位和固定定位的混合，sticky
    效果：随浏览器滚动条滚动，到达顶部之后就不动了
    语法：position: sticky

    特点
        以浏览器的可视窗口为参照点移动元素(固定定位特点)
        粘性定位占有原先的位置(相对定位特点)
        必须至少添加top，bottom，left，right其中一个才有效

    注意兼容性比较差，ie不支持

定位的叠放次序
    使用定位布局时，可能会出现盒子重叠的情况
    此时，可以使用z-index来控制盒子的前后次序（z轴）
    也就是可以通过z-index调整图层顺序

    语法:z-index:1
        数值可以是正整数，负整数，0，默认是auto，数值越大，盒子越靠上
        只有定位的盒子才会有这个属性

定位特殊属性
    行内元素添加绝对或者固定定位，可以直接设置高度和宽度
        行内元素添加宽高度的方法
            1.转换成块元素或者行内块元素
            2.添加浮动
            3.添加绝对定位
            4.添加固定定位

    块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小
        块级元素不给宽度，默认是内容大小方法
            1.转换成行内元素
            2.添加浮动
            3.添加绝对定位
            4.添加固定定位


    脱离标准流的盒子不会触发外边距塌陷
        浮动元素，绝对定位元素都不会触发外边距合并问题

    绝对定位或者固定定位会完全压住标准流的所有内容
    浮动元素只会压住它下面标准流的盒子，不会压住标准流文字或者图片
        浮动之所以不会压住文字，因为浮动产生的目的最初是为了做文字环绕效果


 */